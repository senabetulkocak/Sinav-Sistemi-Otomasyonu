<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>